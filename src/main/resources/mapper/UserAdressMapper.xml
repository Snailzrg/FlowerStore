<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zrg.ixd.dao.UserAdressMapper">
  <resultMap id="BaseResultMap" type="com.zrg.ixd.bean.UserAdress">
    <id column="adid" jdbcType="INTEGER" property="adid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="adress" jdbcType="VARCHAR" property="adress" />
    <result column="recevName" jdbcType="VARCHAR" property="recevname" />
    <result column="recevPhone" jdbcType="VARCHAR" property="recevphone" />
    <result column="Note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    adid, uid, adress, recevName, recevPhone, Note
  </sql>
  <select id="selectByExample" parameterType="com.zrg.ixd.bean.UserAdressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from useradress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from useradress
    where adid = #{adid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from useradress
    where adid = #{adid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zrg.ixd.bean.UserAdressExample">
    delete from useradress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zrg.ixd.bean.UserAdress">
    insert into useradress (adid, uid, adress, 
      recevName, recevPhone, Note
      )
    values (#{adid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{adress,jdbcType=VARCHAR}, 
      #{recevname,jdbcType=VARCHAR}, #{recevphone,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zrg.ixd.bean.UserAdress">
    insert into useradress
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adid != null">
        adid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="adress != null">
        adress,
      </if>
      <if test="recevname != null">
        recevName,
      </if>
      <if test="recevphone != null">
        recevPhone,
      </if>
      <if test="note != null">
        Note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adid != null">
        #{adid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="adress != null">
        #{adress,jdbcType=VARCHAR},
      </if>
      <if test="recevname != null">
        #{recevname,jdbcType=VARCHAR},
      </if>
      <if test="recevphone != null">
        #{recevphone,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zrg.ixd.bean.UserAdressExample" resultType="java.lang.Long">
    select count(*) from useradress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update useradress
    <set>
      <if test="record.adid != null">
        adid = #{record.adid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.adress != null">
        adress = #{record.adress,jdbcType=VARCHAR},
      </if>
      <if test="record.recevname != null">
        recevName = #{record.recevname,jdbcType=VARCHAR},
      </if>
      <if test="record.recevphone != null">
        recevPhone = #{record.recevphone,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        Note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update useradress
    set adid = #{record.adid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      adress = #{record.adress,jdbcType=VARCHAR},
      recevName = #{record.recevname,jdbcType=VARCHAR},
      recevPhone = #{record.recevphone,jdbcType=VARCHAR},
      Note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zrg.ixd.bean.UserAdress">
    update useradress
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="adress != null">
        adress = #{adress,jdbcType=VARCHAR},
      </if>
      <if test="recevname != null">
        recevName = #{recevname,jdbcType=VARCHAR},
      </if>
      <if test="recevphone != null">
        recevPhone = #{recevphone,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        Note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where adid = #{adid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zrg.ixd.bean.UserAdress">
    update useradress
    set uid = #{uid,jdbcType=INTEGER},
      adress = #{adress,jdbcType=VARCHAR},
      recevName = #{recevname,jdbcType=VARCHAR},
      recevPhone = #{recevphone,jdbcType=VARCHAR},
      Note = #{note,jdbcType=VARCHAR}
    where adid = #{adid,jdbcType=INTEGER}
  </update>
</mapper>